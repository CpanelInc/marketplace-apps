---
# passbolt

- name: Download Passbolt repository setup script
  get_url:
    url: "https://download.passbolt.com/ce/installer/passbolt-repo-setup.ce.sh"
    dest: "/tmp/passbolt-repo-setup.ce.sh"

- name: Make Passbolt repository setup script executable
  become: yes
  become_user: root
  file:
    path: /tmp/passbolt-repo-setup.ce.sh
    mode: "+x"

- name: Download Passbolt SHA512 checksum file
  get_url:
    url: "https://github.com/passbolt/passbolt-dep-scripts/releases/latest/download/passbolt-ce-SHA512SUM.txt"
    dest: "/tmp/passbolt-ce-SHA512SUM.txt"

- name: Verify SHA-512 checksum
  command: sha512sum -c /tmp/passbolt-ce-SHA512SUM.txt
  args:
    chdir: /tmp
  register: checksum_result

- name: Display checksum result
  debug:
    var: checksum_result.stdout_lines

- name: Check if checksum is OK
  fail:
    msg: "Bad Checksum. Aborting."
  when: "'passbolt-repo-setup.ce.sh: OK' not in checksum_result.stdout_lines"

- name: Remove setup script if checksum is not OK
  command: rm -f /tmp/passbolt-repo-setup.ce.sh
  when: "'passbolt-repo-setup.ce.sh: OK' not in checksum_result.stdout_lines"

- name: Run passbolt-repo-setup.ce.sh script as root
  command: "bash ./passbolt-repo-setup.ce.sh"
  args:
    chdir: /tmp
  become: yes
  become_user: root

- name: Configure Passbolt parameters in non-interactive mode
  shell: |
    echo "passbolt-ce-server passbolt/mysql-configuration boolean true" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/mysql-passbolt-username string passboltadmin" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/mysql-passbolt-password password {{ passbolt_db_admin_password }}" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/mysql-passbolt-password-repeat password {{ passbolt_db_admin_password }}" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/mysql-passbolt-dbname string passboltdb" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/nginx-configuration boolean true" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/nginx-configuration-three-choices select auto" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/nginx-domain string {{ _domain }}" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/nginx-certificate-file string /etc/letsencrypt/live/{{ _domain }}/fullchain.pem" | sudo debconf-set-selections
    echo "passbolt-ce-server passbolt/nginx-certificate-key-file string /etc/letsencrypt/live/{{ _domain }}/privkey.pem" | sudo debconf-set-selections
  become: yes

- name: Install Passbolt CE server in non-interactive mode
  apt:
    name: passbolt-ce-server
    state: present
  become: yes

# Postfix
- name: install postfix MTA
  apt:
    pkg:
    - postfix
    state: present

- name: updating postfix inet_interfaces
  ansible.builtin.lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^inet_interfaces ='
    line: inet_interfaces = 172.17.0.1

- name: updating postfix mynetwork
  ansible.builtin.lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^mynetworks ='
    line: mynetworks = 192.168.0.0/16, 172.16.0.0/12
  notify: restart postfix

